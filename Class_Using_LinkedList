class Node:
    def __init__(self, NewData, link=None):
        self.data = NewData
        self.next = link

class Queue:
    def __init__(self):
        self.front = None
        self.rear = None

    def isEmpty(self):
        return self.front is None

    def enqueue(self, NewData):
        newNode = Node(NewData)
        if self.front is None:
            self.front = self.rear = newNode
        else:
            self.rear.next = newNode
            self.rear = newNode

    def peek(self):
        if self.isEmpty():
            return "Queue is empty!"
        return self.front.data

    def dequeue(self):
        if self.isEmpty():
            return "Queue underflow!"
        frontNode = self.front
        if self.front == self.rear:
            self.front = self.rear = None
        else:
            self.front = self.front.next
        return frontNode.data

    def display(self):
        if self.isEmpty():
            print("Queue is empty!")
            return
        curNode = self.front
        while curNode is not None:
            print(curNode.data, end=" -> ")
            curNode = curNode.next
        print("None")

# Menu-driven program
q = Queue()
while True:
    print("\nProgram to implement Queue")
    print("1. Enqueue")
    print("2. Dequeue")
    print("3. Peek")
    print("4. Display")
    print("5. Exit")
    choice = int(input("Enter your choice: "))
    
    if choice == 1:
        num = int(input("Enter the data: "))
        q.enqueue(num)
    elif choice == 2:
        result = q.dequeue()
        print("Dequeued item:", result)
    elif choice == 3:
        result = q.peek()
        print("Item at the front of the queue:", result)
    elif choice == 4:
        q.display()
    elif choice == 5:
        print("\nQuitting...")
        break
    else:
        print("Invalid choice, please enter the correct choice!")
